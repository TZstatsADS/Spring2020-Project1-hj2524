group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)%>%ungroup%>%mutate(artist="NULL")%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=2,scales="free_x")
data%>%filter(genre%in%c("Folk","Other"))%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=2,scales="free_x")
data%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=2,scales="free_x")
data%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=2,scales="free_x")
data%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=3,scales="free_x")
xx<-data%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=3,scales="free_x")
xx%>%head(10)
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=3,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=4,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="fixed")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_y")
x
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
```{r,fig.width=70, fig.height=10}
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")+labs(x="artists",y="sentiment")
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")+labs(x="artists",y="sentiment")+theme_lig
xx%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")+labs(x="artists",y="sentiment")+theme_light()
xx%>%drop_na()%>%ggplot(aes(seq_along(n),n,fill=genre))+geom_col(show.legend = F)+facet_wrap(~genre,ncol=6,scales="free_x")+labs(x="artists",y="sentiment")+theme_light()
rbind(top_15_team,top_15_indiv)%>%
ggplot(aes(term, perc, fill = team)) +
geom_col(show.legend = FALSE) +
facet_wrap(~team, scales = "free_y") +
labs(y = "Top 15 words of Pop music",
x = NULL) +
coord_flip()
source(./lib/"function_defined.R")
source("./lib/function_defined.R")
source("../lib/function_defined.R")
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
load('../data/artists.csv')
artists <- read_csv("~/GitHub/Spring2020-Project1-hj2524/data/artists.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
# load lyrics data
load('../output/processed_lyrics.RData')
artists <- read_csv("~/GitHub/Spring2020-Project1-hj2524/data/artists.csv")
team_list<-artists%>%select(-Intro,-Origin)%>%filter(!is.na(Formed)|!is.na(Members))%>%filter(is.na(Formed)|!Formed==199)%>%pull(Artist)
data<-dt_lyrics%>%mutate(team=artist%in%team_list)%>%filter(year>1000)
data_Pop<-data%>%filter(genre%in% c("Pop"))
save(data_Pop, file="../output/data_Pop.RData")
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
load("./output/data_Pop.RData")
load("../output/data_Pop.RData")
load("../output/data_Pop.RData")
tdm_Pop=tdm(data_Pop)
wordcloudplot(tdm_Pop)
load("../output/data_pop_plot.RData")
data_team_P<-data_Pop%>%filter(team)
data_indiv_P<-data_Pop%>%filter(!team)
top_15_team<-tdm(data_team_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_t",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Team")
top_15_indiv<-tdm(data_indiv_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_i",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Individual")
data_pop_plot<-rbind(top_15_team,top_15_indiv)
save(data_pop_plot, file="../output/data_pop_plot.RData")
load("../output/data_pop_plot.RData")
data_pop_plot%>%
ggplot(aes(term, perc, fill = team)) +
geom_col(show.legend = FALSE) +
facet_wrap(~team, scales = "free_y") +
labs(y = "Top 15 words of Pop music",
x = NULL) +
coord_flip()
pop_plot%>%
acast(term ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 150)
nrc <- get_sentiments("nrc")
bing<-get_sentiments("bing")
pop_nrc<-tdm_Pop%>%inner_join(nrc,by=c("term"="word"))%>%rename("n"=`sum(count)`)
pop_plot<-pop_nrc %>%
filter(sentiment%in%c("positive","negative"))%>%
group_by(sentiment)
save(pop_plot, file="../output/pop_plot.RData")
nrc <- get_sentiments("nrc")
bing<-get_sentiments("bing")
pop_nrc<-tdm_Pop%>%inner_join(nrc,by=c("term"="word"))%>%rename("n"=`sum(count)`)
pop_plot_sentiment<-pop_nrc %>%
filter(sentiment%in%c("positive","negative"))%>%
group_by(sentiment)
save(pop_plot_sentiment, file="../output/pop_plot_sentiment.RData")
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
load("../output/data_Pop.RData")
load("../output/data_pop_plot.RData")
load("../output/pop_plot_sentiment.RData")
tdm_Pop=tdm(data_Pop)
wordcloudplot(tdm_Pop)
data_pop_plot%>%
ggplot(aes(term, perc, fill = team)) +
geom_col(show.legend = FALSE) +
facet_wrap(~team, scales = "free_y") +
labs(y = "Top 15 words of Pop music",
x = NULL) +
coord_flip()
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
pop_plot_sentiment%>%
acast(term ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 150)
data_plot_sentiment<-data%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
# load lyrics data
load('../output/processed_lyrics.RData')
artists <- read_csv("~/GitHub/Spring2020-Project1-hj2524/data/artists.csv")
team_list<-artists%>%select(-Intro,-Origin)%>%filter(!is.na(Formed)|!is.na(Members))%>%filter(is.na(Formed)|!Formed==199)%>%pull(Artist)
data<-dt_lyrics%>%mutate(team=artist%in%team_list)%>%filter(year>1000)
data_Pop<-data%>%filter(genre%in% c("Pop"))
save(data_Pop, file="../output/data_Pop.RData")
data_team_P<-data_Pop%>%filter(team)
data_indiv_P<-data_Pop%>%filter(!team)
top_15_team<-tdm(data_team_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_t",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Team")
top_15_indiv<-tdm(data_indiv_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_i",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Individual")
data_pop_plot<-rbind(top_15_team,top_15_indiv)
save(data_pop_plot, file="../output/data_pop_plot.RData")
nrc <- get_sentiments("nrc")
bing<-get_sentiments("bing")
pop_nrc<-tdm_Pop%>%inner_join(nrc,by=c("term"="word"))%>%rename("n"=`sum(count)`)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
# load lyrics data
load('../output/processed_lyrics.RData')
artists <- read_csv("~/GitHub/Spring2020-Project1-hj2524/data/artists.csv")
team_list<-artists%>%select(-Intro,-Origin)%>%filter(!is.na(Formed)|!is.na(Members))%>%filter(is.na(Formed)|!Formed==199)%>%pull(Artist)
data<-dt_lyrics%>%mutate(team=artist%in%team_list)%>%filter(year>1000)
data_Pop<-data%>%filter(genre%in% c("Pop"))
save(data_Pop, file="../output/data_Pop.RData")
data_team_P<-data_Pop%>%filter(team)
data_indiv_P<-data_Pop%>%filter(!team)
top_15_team<-tdm(data_team_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_t",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Team")
top_15_indiv<-tdm(data_indiv_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_i",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Individual")
data_pop_plot<-rbind(top_15_team,top_15_indiv)
save(data_pop_plot, file="../output/data_pop_plot.RData")
nrc <- get_sentiments("nrc")
bing<-get_sentiments("bing")
pop_nrc<-tdm(data_Pop)%>%inner_join(nrc,by=c("term"="word"))%>%rename("n"=`sum(count)`)
pop_plot_sentiment<-pop_nrc %>%
filter(sentiment%in%c("positive","negative"))%>%
group_by(sentiment)
save(pop_plot_sentiment, file="../output/pop_plot_sentiment.RData")
data_plot_sentiment<-data%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)
save(data_plot_sentiment, file="../output/data_plot_sentiment.RData")
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
load("../output/data_Pop.RData")
load("../output/data_pop_plot.RData")
load("../output/pop_plot_sentiment.RData")
load("../output/data_plot_sentiment.RData")
wordcloudplot(tdm(data_Pop))
data_pop_plot%>%
ggplot(aes(term, perc, fill = team)) +
geom_col(show.legend = FALSE) +
facet_wrap(~team, scales = "free_y") +
labs(y = "Top 15 words of Pop music",
x = NULL) +
coord_flip()
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
pop_plot_sentiment%>%
acast(term ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 150)
data_plot_sentiment%>%drop_na()%>%
ggplot(aes(seq_along(n),n,fill=genre))+
geom_col(show.legend = F)+
facet_wrap(~genre,ncol=6,scales="free_x")+
labs(x="artists",y="sentiment")+
theme_light()
pop_plot_sentiment
wordcloudplot(tdm(data_Pop))
data_pop_plot%>%
ggplot(aes(term, perc, fill = team)) +
geom_col(show.legend = FALSE) +
facet_wrap(~team, scales = "free_y") +
labs(y = "Top 15 words of Pop music",
x = NULL) +
coord_flip()
data_pop_plot%>%
ggplot(aes(term, perc, fill = team)) +
geom_col(show.legend = FALSE) +
facet_wrap(~team, scales = "free_y") +
labs(y = "Top 15 words of Pop music",
x = NULL) +
coord_flip()
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
data_plot_sentiment%>%drop_na()%>%
ggplot(aes(seq_along(n),n,fill=genre))+
geom_col(show.legend = F)+
facet_wrap(~genre,ncol=6,scales="free_x")+
labs(x="artists",y="sentiment")+
theme_light()
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
source("../lib/function_defined.R")
# load lyrics data
load('../output/processed_lyrics.RData')
artists <- read_csv("~/GitHub/Spring2020-Project1-hj2524/data/artists.csv")
team_list<-artists%>%select(-Intro,-Origin)%>%filter(!is.na(Formed)|!is.na(Members))%>%filter(is.na(Formed)|!Formed==199)%>%pull(Artist)
data<-dt_lyrics%>%mutate(team=artist%in%team_list)%>%filter(year>1000)
data_Pop<-data%>%filter(genre%in% c("Pop"))
save(data_Pop, file="../output/data_Pop.RData")
data_team_P<-data_Pop%>%filter(team)
data_indiv_P<-data_Pop%>%filter(!team)
top_15_team<-tdm(data_team_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_t",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Team")
top_15_indiv<-tdm(data_indiv_P)%>%mutate(perc=`sum(count)`/sum(`sum(count)`))%>%top_n(15,perc)%>%mutate(term=paste(term,"_i",sep=""))%>%mutate(term=reorder(term,perc))%>%mutate(team="Individual")
data_pop_plot<-rbind(top_15_team,top_15_indiv)
save(data_pop_plot, file="../output/data_pop_plot.RData")
nrc <- get_sentiments("nrc")
bing<-get_sentiments("bing")
pop_nrc<-tdm(data_Pop)%>%inner_join(nrc,by=c("term"="word"))%>%rename("n"=`sum(count)`)
pop_plot_sentiment<-pop_nrc %>%
filter(sentiment%in%c("positive","negative"))%>%
group_by(sentiment)
save(pop_plot_sentiment, file="../output/pop_plot_sentiment.RData")
data_plot_sentiment<-data%>%
group_by(genre,artist)%>%nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%unnest(col=c("tdm"))%>%inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%group_by(genre,artist,sentiment)%>%summarise(n=n())%>%spread(sentiment,n)%>%transmute(n=positive-negative)
save(data_plot_sentiment, file="../output/data_plot_sentiment.RData")
install.packages("readability")
>if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh(c(
'trinker/lexicon',
'trinker/textclean',
'trinker/textshape',
"trinker/syllable",
"trinker/readability"
>if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh(c(
'trinker/lexicon',
'trinker/textclean',
'trinker/textshape',
"trinker/syllable",
"trinker/readability"
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh(c(
'trinker/lexicon',
'trinker/textclean',
'trinker/textshape',
"trinker/syllable",
"trinker/readability"
library(pacman)
library(readability)
library(readability)
install.packages("readability")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh(c(
'trinker/lexicon',
'trinker/textclean',
'trinker/textshape',
"trinker/syllable",
"trinker/readability"
))
knitr::opts_chunk$set(echo = TRUE)
packages.used=c("tm", "tidytext","tidyverse","DT","wordcloud","data.table","RColorBrewer","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
# load functions
source("../lib/function_defined.R")
# load datasets
load("../output/data_Pop.RData")
load("../output/data_pop_plot.RData")
load("../output/pop_plot_sentiment.RData")
load("../output/data_plot_sentiment.RData")
wordcloudplot(tdm(data_Pop))
data_pop_plot%>%
ggplot(aes(term, perc, fill = team)) +
geom_col(show.legend = FALSE) +
facet_wrap(~team, scales = "free_y") +
labs(y = "Top 15 words of Pop music",x = NULL) +
coord_flip()+
theme_light()
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()+
theme_light()
pop_plot_sentiment%>%
acast(term ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 150)
data_plot_sentiment%>%drop_na()%>%
ggplot(aes(seq_along(n),n,fill=genre))+
geom_col(show.legend = F)+
facet_wrap(~genre,ncol=6,scales="free_x")+
labs(x="artists",y="sentiment")+
theme_light()
View(nrc)
tdm(data_Pop)%>%inner_join(nrc,by=c("term"="word"))%>%rename("n"=`sum(count)`)->xx
xx%>%arrange(desc(n))->x
x
data_plot_sentiment%>%drop_na()%>%
ggplot(aes(seq_along(n),n,fill=genre))+
geom_col(show.legend = F)+
facet_wrap(~genre,ncol=6,scales="free_x")+
labs(x="artists",y="diff=(positive-negative)")+
theme_light()
knitr::opts_chunk$set(echo = TRUE)
packages.used=c("tm", "tidytext","tidyverse","DT","wordcloud","data.table","RColorBrewer","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
# load functions
source("../lib/function_defined.R")
# load datasets
load("../output/data_Pop.RData")
load("../output/data_pop_plot.RData")
knitr::opts_chunk$set(echo = TRUE)
packages.used=c("tm", "tidytext","tidyverse","DT","wordcloud","data.table","RColorBrewer","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
# load functions
source("../lib/function_defined.R")
# load datasets
load("../output/data_Pop.RData")
load("../output/pop_plot_sentiment.RData")
load("../output/data_plot_sentiment.RData")
wordcloudplot(tdm(data_Pop))
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()+
theme_light()
pop_plot_sentiment%>%
acast(term ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 150)
data_plot_sentiment%>%drop_na()%>%
ggplot(aes(seq_along(n),n,fill=genre))+
geom_col(show.legend = F)+
facet_wrap(~genre,ncol=6,scales="free_x")+
labs(x="artists",y="diff=(positive-negative)")+
theme_light()
