source("../lib/function_defined.R")
# load lyrics data from Text_processed
load('../output/processed_lyrics.RData')
# load artists information
artists <- read_csv("~/GitHub/Spring2020-Project1-hj2524/data/artists.csv")
# find a list of team artist
team_list<-artists%>%select(-Intro,-Origin)%>%filter(!is.na(Formed)|!is.na(Members))%>%filter(is.na(Formed)|!Formed==199)%>%pull(Artist)
# add a column that indicates team or individual
data<-dt_lyrics%>%mutate(team=artist%in%team_list)%>%filter(year>1000)
# Filter out Pop music
data_Pop<-data%>%filter(genre%in% c("Pop"))
# Export data
save(data_Pop, file="../output/data_Pop.RData")
# import sentiment nrc
nrc <- get_sentiments("nrc")
# combine sentiment with TDM of lyrics of pop music.
pop_nrc<-tdm(data_Pop)%>%inner_join(nrc,by=c("term"="word"))%>%rename("n"=`sum(count)`)
# Keep those positive and negative sentiments data.
pop_plot_sentiment<-pop_nrc %>%
filter(sentiment%in%c("positive","negative"))%>%
group_by(sentiment)
# Export data
save(pop_plot_sentiment, file="../output/pop_plot_sentiment.RData")
# import sentiment bing
bing<-get_sentiments("bing")
# For any artists among all types of music,
# count the frequent of positive & negative words in lyrics of all of her songs,
# and find if there are more positive words or more negative words in all of her songs.
data_plot_sentiment<-
data%>%group_by(genre,artist)%>%
nest%>%mutate(tdm=map(data,tdm))%>%select(-data)%>%
unnest(col=c("tdm"))%>%
inner_join(bing,by=c("term"="word"))%>%rename("n"=`sum(count)`)%>%
group_by(genre,artist,sentiment)%>%summarise(n=n())%>%
spread(sentiment,n)%>%
transmute(n=positive-negative)
# Export data
save(data_plot_sentiment, file="../output/data_plot_sentiment.RData")
nrc<-nrc%>%rename(word=term)
nrc
tidy_lyrics<-dt_lyrics
x<-"Pop"
x<-"Indie"
tidy_lyrics%>%
filter(genre==x)%>%
semi_join(nrc)
tidy_lyrics%>%
filter(genre==x)
tdm(pop_nrc)
data_Pop
data_Pop%>%tdm
source("../lib/function_defined.R")
tdm(data_Pop)
tdm(data_Pop)->xx
xx%>%rename(word=term)
xx%>%rename(word=term)->xx
xx%>%
semi_join(nrc)
xx%>%
semi_join(nrc)%>%
count(word,sort=TRUE)
nrc
xx%>%
semi_join(nrc)
xx%>%
inner_join(nrc)
xx%>%
semi_join(nrc)%>%
count(word,sort=TRUE)%>%
inner_join(nrc)
xx%>%
semi_join(nrc)%>%
count(word,sort=TRUE)%>%
inner_join(nrc)%>%
pivot_longer(cols=-c("word","n"),
names_to = "emotions",values_to = "amount")
xx%>%
semi_join(nrc)%>%
count(word,sort=TRUE)%>%
inner_join(nrc)
xx%>%
semi_join(nrc)%>%
count(word,sort=TRUE)%>%
inner_join(nrc)%>%rename(emotions=sentiments)
xx%>%
semi_join(nrc)%>%
count(word,sort=TRUE)%>%
inner_join(nrc)%>%rename("emotions"=sentiments)
xx%>%
semi_join(nrc)%>%
count(word,sort=TRUE)%>%
inner_join(nrc)->yy
yy
yy%>%rename(emotions=sentiment)
yy%>%rename(emotions=sentiment,amount=n)
yy%>%rename(emotions=sentiment,amount=n)->yy
yy
yy%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
yy%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)->yy
yy%>%rename(asd=emotions)
eight_emotions_f<-function(x){
dt_lyrics%>%
filter(genre==x)%>%tdm%>%
inner_join(nrc)%>%
pivot_longer(cols=-c("word","n"),
names_to = "emotions",values_to = "amount")%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
}
eight_emotions_f("Pop")
eight_emotions_f<-function(x){
dt_lyrics%>%
filter(genre==x)%>%tdm%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=n)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
}
x<-"Indie"
dt_lyrics%>%
filter(genre==x)%>%tdm%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=n)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
dt_lyrics%>%
filter(genre==x)%>%tdm
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=n)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=n)
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)
xx<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)
xx
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
eight_emotions_f("Pop")
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
x<-"Pop"
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
eight_emotions_f<-function(x){
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
}
eight_emotions_f("Pop")
genre_name_select<-c("Pop","Indie")
map(genre_name_select,eight_emotions_f)
eight_emotions_f<-function(x){
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)%>%rename(x=emotions)
}
map(genre_name_select,eight_emotions_f)
eight_emotions_f<-function(x){
newnam=x
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)%>%rename(x=emotions)
}
eight_emotions_f<-function(x){
newname=x
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)%>%rename(newname=emotions)
}
map(genre_name_select,eight_emotions_f)
x<-"Pop"
newname=x
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)%>%rename(newname=emotions)
x<-"Indie"
newname=x
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)%>%rename(newname=emotions)
newname=x
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)%>%ungroup%>%rename(newname=emotions)
map(genre_name_select,eight_emotions_f)
map(genre_name_select,eight_emotions_f)->xx
xx
xx%>%rename()
for(i in seq_along(genre_name_select)){}
for(i in seq_along(genre_name_select)){}
for(i in seq_along(genre_name_select)){}
eight_emotions_genre<-map(genre_name_select,eight_emotions_f)
genre_name_select
eight_emotions_genre<-map(genre_name_select,eight_emotions_f)
for(i in seq_along(genre_name_select)){
eight_emotions_genre[[i]]%>%rename(genre_name_select[i]=emotions)
seq_along(genre_name_select)
i<-1
eight_emotions_genre[[i]]%>%rename(genre_name_select[i]=emotions)
eight_emotions_genre[[i]]
for(i in seq_along(genre_name_select)){
eight_emotions_genre[[i]]%>%rename(genre_name_select[i]=newname)
eight_emotions_genre[[i]]
eight_emotions_genre[[i]]%>%rename("!2"=newname)
genre_name_select[i]
eight_emotions_genre[[i]]%>%rename(genre_name_select[i]=newname)
eight_emotions_genre[[i]]%>%rename(genre_name_select[i]=newname)
genre_name_select[i]
eight_emotions_genre[[i]]%>%rename(genre_name_select[i]=newname)
eight_emotions_genre[[i]]%>%rename("Pop"=newname)
eight_emotions_genre[[i]]%>%rename(genre_name_select[i]=newname)
eight_emotions_genre[[i]]%>%rename(Pop=newname)
eight_emotions_genre[[i]]%>%rename(as.character(genre_name_select[i])=newname)
"Pop"
as.character("Pop")
as.Vector("Pop")
as.vector("Pop")
eight_emotions_genre[[i]]%>%rename(as.vector(genre_name_select[i])=newname)
names(eight_emotions_genre[[i]])
names(eight_emotions_genre[[i]])<-c(genre_name_select[i],"n")
eight_emotions_genre
for(i in seq_along(genre_name_select)){
names(eight_emotions_genre[[i]])<-c(genre_name_select[i],"n")
}
eight_emotions_genre
eight_emotions_f<-function(x){
newname=x
dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
}
eight_emotions_genre<-map(genre_name_select,eight_emotions_f)
eight_emotions_genre
for(i in seq_along(genre_name_select)){
names(eight_emotions_genre[[i]])<-c(genre_name_select[i],"n")
}
eight_emotions_genre<-map(genre_name_select,eight_emotions_f)
eight_emotions_genre
for(i in seq_along(genre_name_select)){
names(eight_emotions_genre[[i]])<-c(genre_name_select[i],"n")
}
eight_emotions_genre
eight_emotions_f<-function(x){
data<-tidy_lyrics%>%
filter(genre==x)%>%
semi_join(nrc)%>%
count(word,sort=TRUE)%>%
inner_join(nrc)%>%
pivot_longer(cols=-c("word","n"),
names_to = "emotions",values_to = "amount")%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
names(data)<-c("emotions",x)
}
eight_emotions_f<-function(x){
data<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
names(data)<-c("emotions",x)
}
map(genre_name_select,eight_emotions_f)
eight_emotions_f<-function(x){
data<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
names(data)<-c("emotions",x)
}
x<-"Pop"
data<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
data<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
names(data)<-c("emotions",x)
map(genre_name_select,eight_emotions_f)
x
data<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
data
names(data)
names(data)<-c("emotions",x)
data
eight_emotions_f<-function(x){
data<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
names(data)<-c("emotions",x)
return(data)
}
eight_emotions_f(x)
genre_name_select
map(genre_name_select,eight_emotions_f)
eight_emotions_f<-function(x){
data<-dt_lyrics%>%
filter(genre==x)%>%tdm%>%rename(word=term)%>%
inner_join(nrc)%>%
rename(emotions=sentiment,amount=`sum(count)`)%>%
select(emotions,amount)%>%
group_by(emotions)%>%mutate(n=sum(amount))%>%head(8)%>%select(emotions,n)
names(data)<-c("emotions",x)
return(data)
}
genre_name_select<-c("Indie","Country")
eight_emotions_genre<-map(genre_name_select,eight_emotions_f)
eight_emotions_genre
knitr::opts_chunk$set(echo = TRUE)
packages.used=c("tm", "tidytext","tidyverse","DT","wordcloud","data.table","RColorBrewer","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
# load functions
source("../lib/function_defined.R")
# load datasets
load("../output/data_Pop.RData")
load("../output/pop_plot_sentiment.RData")
load("../output/data_plot_sentiment.RData")
wordcloudplot(tdm(data_Pop))
pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()+
theme_light()
pop_plot_sentiment%>%
acast(term ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 150)
data_plot_sentiment%>%drop_na()%>%
ggplot(aes(seq_along(n),n,fill=genre))+
geom_col(show.legend = F)+
facet_wrap(~genre,ncol=6,scales="free_x")+
labs(x="artists",y="diff=(positive-negative)")+
theme_light()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
pnorm(log(990/1000),0.001,0.015)
n=5
pnorm(log(990/1000),0.001*n,0.015*sqrt(n))
n=1/2
1-pnorm(log(90/80),0.08/n,0.15/sqrt(n))
1-pnorm(log(100/97),0.0002,0.03)
1-pnorm(log(100/97),0.0002,0.03)
1-pnorm(log(100/97),0.0002,0.03)
1-pnorm(log(100/97),0.0002,0.03)
n=20
1-pnorm(log(100/97),0.0002*n,0.03*sqrt(n))
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
data("stop_words")
stop_words
stop_words$word->xx
"not"%in%xx
load("../output/processed_lyrics.RData")
dt_lyrics$stemmedwords->xx
xx
load('../output/processed_lyrics.RData')
load('../data/lyrics.RData')
knitr::opts_chunk$set(echo = TRUE)
packages.used=c("tm", "tidytext","tidyverse","DT","wordcloud","data.table","RColorBrewer","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
# load functions
source("../lib/function_defined.R")
# load datasets
load("../output/data_Pop.RData")
load("../output/pop_plot_sentiment.RData")
load("../output/data_plot_sentiment.RData")
wordcloudplot(tdm(data_Pop))
xx<-pop_plot_sentiment%>%
top_n(10,n)%>%
ungroup() %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(term, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()+
theme_light()
save(xx, file="../fig/figt.RData")
save(xx, file="../figs/figt.RData")
xx
load("../figs/figt.RData")
xx
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(RColorBrewer)
library(reshape2)
get_sentiment("AFINN")
# import sentiment nrc
nrc <- get_sentiments("nrc")
get_sentiment("AFINN")
get_sentiments("AFINN")
get_sentiments("afinn")->x
x
# import sentiment nrc
nrc <- get_sentiments("nrc")
y<-get_sentiments("bing")
